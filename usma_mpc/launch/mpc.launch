<launch>
    <arg name="physics"         default="live" />
    <arg name="launcher"        default="testmpc" />
    <arg name="shutdown_topic"  default="/usma/shutdown"/>
    
    <include file="$(find optitrack_controller)/launch/killNodes.launch">
        <arg name="launcher"    value="$(arg launcher)"/>
        <arg name="kill_topic"  value="$(arg shutdown_topic)"/>
        <arg name="land_topic"  value="/ardrone/land"/>
        <arg name="cmd_topic"   value="/usma_ardrone/uav/cmd_vel"/>
    </include>


    <node pkg="optitrack_controller"    type="listenForKill"        name="shutdownListener_$(arg launcher)" output="screen" required="true">
        <param name="kill_topic"  value="$(arg shutdown_topic)"/>
    </node>

    <!-- Start the mpc node   -->
    <include file="$(find usma_mpc)/launch/denmpc_params.launch">
        <!-- <include file="$(find usma_mpc)/launch/denmpc_ardrone.launch"> -->
        <arg name="ardrone_pose_topic"          value="/vrpn_client_node/Ardrone/pose"/>
        <arg name="ardrone_desiredpose_topic"   value="/usma_ardrone/mpc/desiredpose"/>
        <arg name="ardrone_ctrl_ch_topic"       value="/usma_ardrone/uav/cmd_vel"/>    
        <arg name="scenario_param_file"         value="$(find usma_mpc)/config/$(arg physics)_scenario_params.yaml"/>    
    </include>


    <include file="$(find usma_mpc)/launch/mpc_logger.launch"></include>

    
    <node pkg="usma_mpc" type="simplePosePublisher.py" name="simplePosePub">
        <param name="ardrone_desiredpose_topic"   value="/usma_ardrone/mpc/desiredpose"/>
    </node>

</launch>


<!-- 
type /ardrone/mpc/desiredpose   geometry_msgs/PoseStamped
type /ardrone/mpc/pose          geometry_msgs/PoseStamped
type /ardrone/mpc/cmd_vel       geometry_msgs/Twist
 -->

<!-- 
rostopic pub -r 20 /usma_ardrone/mpc/desiredpose geometry_msgs/PoseStamped '{header: {seq: 1,stamp: {secs: 1, nsecs: 0},frame_id: ''},pose: {position: {x: 1.0, y: 0.0, z: 1.0}, orientation: {x: 0.0, y: 0.0, z: 0.0, w: 1.0}}}' 



'
{
    header: 
    {
        seq: 1,
        stamp: {secs: 1, nsecs: 0},
        frame_id: ''
    },
    pose: 
    {
        position: {x: 1.0, y: 0.0, z: 1.0}, 
        orientation: {x: 0.0, y: 0.0, z: 0.0, w: 1.0}
    }

}
' 


header: 
  seq: 1472
  stamp: 
    secs: 16
    nsecs: 170000000
  frame_id: ''
pose: 
  position: 
    x: 0.497533477943
    y: -0.0968728789839
    z: 0.0297960441947
  orientation: 
    x: 1.41057859944e-06
    y: 1.97249878706e-05
    z: -0.0712115553262
    w: 0.997461234333


-->


